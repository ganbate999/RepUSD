{"version":3,"sources":["components/UI/Image/index.js","hoc/Section/index.js","components/UI/CustomRadio/index.js","components/RewardModal/index.js","constants/links/exchange-platforms.js","components/UI/CustomCheckbox/index.js","containers/Lend/DexPlatform/index.js","utils/headerConfig.js","containers/Lend/RepCalc/index.js","containers/Lend/index.js"],"names":["useStyles","makeStyles","root","width","height","dBlock","display","Image","props","src","srcSet","alt","lazy","lazyProps","className","rest","classes","clsx","effect","defaultProps","theme","margin","padding","spacing","breakpoints","up","fullWidth","maxWidth","disablePadding","narrow","Section","children","alternate","color","checked","CustomRadio","Radio","actionButton","backgroundColor","custom","palette","darkRed","minWidth","border","dialogActions","justifyContent","marginTop","marginRight","titleLine","marginBottom","labelLine","labelLine1","paddingRight","float","input","imagePad","background","borderRadius","image","dialogContent","down","maxHeight","default","container","gridCls","label","fontSize","RewardModal","onClose","account","chainId","library","reward","dialogClasses","dialogStyles","enqueueSnackbar","useSnackbar","contract","contractInstance","onFormSubmit","ev","a","preventDefault","useState","rewardMethod","setRewardMethod","loadingStatus","setLoadingStatus","chooseReward","w_rewardMethod","loop","tx","changeRewardMethod","rewardMethodHash","hash","getTransactionReceipt","console","log","isEmpty","delay","status","variant","data","message","DialogWrapper","open","onSubmit","Typography","DialogContent","dividers","Grid","item","alignItems","xs","md","RadioGroup","aria-label","value","onChange","event","target","FormControlLabel","control","style","flexDirection","ContainedButton","loading","borderColor","cursor","onClick","EXCHANGE_PLATFORMS","CustomCheckbox","Checkbox","checkedIcon","icon","boxShadow","exchangeLabel","warning","dark","fontFamily","marginLeft","searchInput","platforms","layout","topAppBarHeight","footerHeight","overflow","paddingTop","desc","DexPlatform","useTheme","useContext","AppContext","markets","setMarkets","setSearchInvest","loadingSerach","handleChange","tmpArray","JSON","parse","stringify","push","name","toLowerCase","index","indexOf","splice","map","makeTokenHeader","token","headers","Authorization","reputation","fontWeight","infoboard","divider","searchPan","market","property","valinfo","RepCalc","setLoadingSearch","isSearchInvest","investInfo","setInvestInfo","borrowAmount","state","setState","loadingLendStatus","setLoadingLendStatus","firstLoadStatus","setFirstLoadStatus","isRewardDialog","setIsRewardDialog","useEffect","param","url","serverAddress","axios","post","address","invested_platforms","response","success","result","parseFloat","totalReputation","toFixed","getInvest","then","getReputation","getRewardMethodInfo","userAccount","userInfo","lend","size","alignContent","data-aos","data-aos-easing","data-aos-duration","eachInfo","dapp","rep","index_rep","bDisplay","length","poolName","symbol","amount","repUSD","window","location","href","section","Lend","AOS","init","once","duration","easing"],"mappings":"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","file":"static/js/8.5ae2ee95.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  dBlock: {\r\n    display: 'block',\r\n  },\r\n}));\r\n/**\r\n * Component to display the images\r\n *\r\n * @param {Object} props\r\n */\r\nconst Image = props => {\r\n  const { src, srcSet, alt, lazy, lazyProps, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  if (lazy) {\r\n    return (\r\n      <LazyLoadImage\r\n        className={clsx('image', classes.root, classes.dBlock, className)}\r\n        alt={alt}\r\n        src={src}\r\n        srcSet={srcSet}\r\n        effect=\"opacity\"\r\n        {...lazyProps}\r\n        {...rest}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <img\r\n      className={clsx('image', classes.root, className)}\r\n      alt={alt}\r\n      src={src}\r\n      srcSet={srcSet}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nImage.defaultProps = {\r\n  alt: '...',\r\n  lazy: true,\r\n  lazyProps: {\r\n    width: 'auto',\r\n    height: 'auto',\r\n  },\r\n};\r\n\r\nImage.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Source of the image\r\n   */\r\n  src: PropTypes.string.isRequired,\r\n  /**\r\n   * Source set for the responsive images\r\n   */\r\n  srcSet: PropTypes.string,\r\n  /**\r\n   * Image title\r\n   */\r\n  alt: PropTypes.string,\r\n  /**\r\n   * Should lazy load the image\r\n   */\r\n  lazy: PropTypes.bool,\r\n};\r\n\r\nexport default Image;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(6, 2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: theme.spacing(8, 10),\r\n    },\r\n  },\r\n  fullWidth: {\r\n    maxWidth: '100%',\r\n  },\r\n  disablePadding: {\r\n    padding: 0,\r\n  },\r\n  narrow: {\r\n    maxWidth: 800,\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the sections\r\n *\r\n * @param {Object} props\r\n */\r\nconst Section = props => {\r\n  const {\r\n    children,\r\n    fullWidth,\r\n    narrow,\r\n    disablePadding,\r\n    alternate,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <section\r\n      className={clsx(\r\n        'section',\r\n        classes.root,\r\n        fullWidth ? classes.fullWidth : {},\r\n        narrow ? classes.narrow : {},\r\n        disablePadding ? classes.disablePadding : {},\r\n        alternate ? classes.alternate : {},\r\n        className,\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Children to placed inside the section\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Should show narrow sections\r\n   */\r\n  narrow: PropTypes.bool,\r\n  /**\r\n   * Should the section be full width\r\n   */\r\n  fullWidth: PropTypes.bool,\r\n  /**\r\n   * Should the section render with no padding\r\n   */\r\n  disablePadding: PropTypes.bool,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    color: \"#13c552\",\r\n    \"&$checked\": {\r\n        color: \"#13c552\"\r\n    }\r\n  },\r\n  checked: {},\r\n});\r\n\r\n// Inspired by blueprintjs\r\nexport default function CustomRadio(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Radio\r\n        classes={{\r\n            root: classes.root,\r\n            checked: classes.checked\r\n        }}\r\n        \r\n        {...props}\r\n    />\r\n  );\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { FormControlLabel } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport DialogWrapper, { dialogStyles } from 'hoc/DialogWrapper';\r\nimport ContainedButton from 'components/UI/Buttons/ContainedButton';\r\nimport { isEmpty, delay } from 'utils/utility';\r\nimport { contractInstance } from 'services/contractInstance';\r\nimport CustomRadio from 'components/UI/CustomRadio';\r\nimport Image from 'components/UI/Image';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  actionButton: {\r\n    backgroundColor: theme.custom.palette.darkRed,\r\n    minWidth: theme.spacing(1),\r\n    border: 'none'\r\n  },\r\n  dialogActions: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    marginTop: theme.spacing(3),\r\n    marginRight: -theme.spacing(2 / 8)\r\n  },\r\n  titleLine: {\r\n    marginBottom: theme.spacing(2.5)\r\n  },\r\n  labelLine: {\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  labelLine1: {\r\n    marginTop: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    float: 'right',\r\n    color: '#16ACE2'\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  imagePad: {\r\n    width:200, \r\n    height: 200, \r\n    background: 'none', \r\n    margin: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid rgb(107,118,161)'\r\n  },\r\n  image: {\r\n    width: 150, \r\n    height: 150, \r\n    background: 'none', \r\n    margin: '10px',\r\n    borderRadius: '5px',\r\n  },\r\n  dialogContent: {\r\n    [theme.breakpoints.down(360)]: {\r\n      maxHeight: '200px',\r\n      padding: theme.spacing(0.5),\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      maxHeight: '382px',\r\n      padding: theme.spacing(1, 0, 1, .5),\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(1),\r\n    maxHeight: '460px',\r\n    width: 'auto',\r\n    overflowX: 'unset',\r\n    overflowY: 'scroll',\r\n    '&::-webkit-scrollbar-track': {\r\n      borderRadius: 2,\r\n      backgroundColor: theme.palette.background.default\r\n    },\r\n    '&::-webkit-scrollbar': {\r\n      width: 5,\r\n      backgroundColor: theme.palette.background.default\r\n    },\r\n  },\r\n  container: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 0\r\n    },\r\n    display: 'flex',\r\n    padding: `2px 8px 8px 8px`,\r\n    margin: 0,\r\n    flexGrow: 1,\r\n  },\r\n  gridCls:{\r\n    padding: theme.spacing(0)\r\n  },\r\n  label: {\r\n    fontSize: '20px',\r\n    //fontFamily: 'fontMedium'\r\n  }\r\n}));\r\n\r\nconst RewardModal = ({ onClose, account, chainId, library, reward }) => {\r\n  const classes = useStyles();\r\n  const dialogClasses = dialogStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const contract = contractInstance(account, chainId, library);\r\n  \r\n  const onFormSubmit = async (ev) => {\r\n    ev.preventDefault()\r\n    onClose();\r\n  }\r\n  \r\n  const[rewardMethod, setRewardMethod] = useState(reward);\r\n  const[loadingStatus, setLoadingStatus] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setRewardMethod(event.target.value);\r\n  }\r\n\r\n  const chooseReward = async () => {\r\n    if (!!account) {\r\n      let w_rewardMethod = false;\r\n      if(rewardMethod === 'sharing')\r\n        w_rewardMethod = true;\r\n\r\n      setLoadingStatus(true)\r\n      try {\r\n        let loop = true;\r\n        let tx = null;\r\n        const {hash: rewardMethodHash} = await contract.changeRewardMethod(w_rewardMethod)\r\n        \r\n        while (loop) {\r\n            tx = await library.getTransactionReceipt(rewardMethodHash);\r\n            console.log('kevin transaction tx', tx)\r\n            if (isEmpty(tx)) {\r\n                await delay(300)\r\n            } else {\r\n                loop = false\r\n            }\r\n        }\r\n        if (tx.status === 1) {\r\n          setLoadingStatus(false)\r\n          enqueueSnackbar(`Reward Method Change Successful.`, { variant: 'success'});\r\n          onClose();\r\n          return;\r\n        } else {\r\n          setLoadingStatus(false)\r\n          enqueueSnackbar(`failed:`, { variant: 'error' });\r\n          onClose();\r\n          return;\r\n        }\r\n      } catch (error) {\r\n          enqueueSnackbar(`error: ${error?.data?.message}`, { variant: 'error' });\r\n          setLoadingStatus(false)\r\n          console.log('kevin===>', error)\r\n      }\r\n    }\r\n  }  \r\n  \r\n  return (\r\n    <DialogWrapper open={true} onClose={onClose}>\r\n      <form onSubmit={onFormSubmit} >\r\n        <div className={dialogClasses.root}>\r\n          <Typography variant='h6' className={classes.titleLine}>Set Reward Method</Typography>\r\n          <DialogContent dividers className={classes.dialogContent}>\r\n            <Grid container spacing={2} className={classes.container} justifyContent=\"space-between\">\r\n              <Grid\r\n                item\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                xs={12}\r\n                md={6}\r\n                spacing={2}>\r\n                  <Image\r\n                      src=\"assets/images/RepUSD.png\"\r\n                      className={classes.image}\r\n                      alt=\"Web3 Legal Engineering\"\r\n                  />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={6}\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <RadioGroup aria-label=\"gender\" value={rewardMethod} onChange={handleChange}>\r\n                    <FormControlLabel classes={{label: classes.label}} value=\"interest\" control={<CustomRadio />} label=\"Earning interest\" />\r\n                    <FormControlLabel classes={{label: classes.label}} value=\"sharing\" control={<CustomRadio />} label=\"Profit sharing\" />\r\n                </RadioGroup>\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                {\r\n                  reward !== \"sharing\" &&\r\n                  <Typography>\r\n                  Your method is Earn Interest with 36% APY.<br/>\r\n                  If you like to change your reward method to Profit Sharing with earnings of 30RepUSD \r\n                  per 100RepUSD per year, select the Profit Sharing option below and click change. <br/>\r\n                  If you want to continue with Earn Interest reward method, click close. \r\n                  </Typography>\r\n                }\r\n                {\r\n                  reward === \"sharing\" && \r\n                  <Typography>\r\n                    Your reward method is Profit Sharing with 30% APY.\r\n                    If you like to change your reward method to Earning Interest with 36% APY, \r\n                    select the Earning Interest option above and click change below. <br/>\r\n                    If you want to continue with Profit Sharing reward method, click close.\r\n                  </Typography>\r\n                }\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </DialogContent>\r\n          <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n            <ContainedButton\r\n              loading={loadingStatus}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '2.5rem',\r\n                marginTop: '1rem',\r\n                borderRadius: '1rem',\r\n                borderColor: 'red',\r\n                cursor: 'pointer',\r\n                color: 'textSecondary',\r\n              }}\r\n              onClick={() => \r\n                chooseReward()\r\n              }\r\n            >\r\n              Change\r\n            </ContainedButton>\r\n            <ContainedButton\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '2.3rem',\r\n                marginTop: '1.1rem',\r\n                borderRadius: '1rem',\r\n                borderColor: 'white',\r\n                cursor: 'pointer',\r\n                color: 'textPrimary'\r\n              }}\r\n              onClick={() => \r\n                onClose()\r\n              }\r\n            >\r\n              Close\r\n            </ContainedButton>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </DialogWrapper>\r\n  );\r\n}\r\n\r\nexport default RewardModal;\r\n","\r\nconst EXCHANGE_PLATFORMS = [\r\n    'Pancakeswap',\r\n    'Uniswap',\r\n    'Compound',\r\n    'Curve',\r\n    'Marker',\r\n    'Sushiswap',\r\n    'Venus',\r\n    'Yearn',\r\n    'InstaDApp',\r\n    'MDex'\r\n];\r\n\r\nexport {\r\n    EXCHANGE_PLATFORMS\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport PanoramaFishEyeIcon from '@material-ui/icons/PanoramaFishEye';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    color: \"#13c552\",\r\n    \"&$checked\": {\r\n        color: \"#13c552\"\r\n    }\r\n  },\r\n  checked: {},\r\n});\r\n\r\n// Inspired by blueprintjs\r\nexport default function CustomCheckbox(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Checkbox\r\n        classes={{\r\n            root: classes.root,\r\n            checked: classes.checked\r\n        }}\r\n        checkedIcon={<CheckCircleIcon />}\r\n        icon={<PanoramaFishEyeIcon />}\r\n        {...props}\r\n    />\r\n  );\r\n}","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport Image from 'components/UI/Image';\r\nimport { EXCHANGE_PLATFORMS } from 'constants/links/exchange-platforms';\r\nimport CustomCheckbox from 'components/UI/CustomCheckbox';\r\nimport { AppContext } from 'contexts';\r\nimport ContainedButton from 'components/UI/Buttons/ContainedButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    boxShadow: '0px 0px 5px 0 rgba(243,243,243,.8)',\r\n    background: 'rgb(255,255,255)',\r\n    borderRadius: '10px',\r\n    width: '100%',\r\n    padding: theme.spacing(4,3)\r\n  },\r\n  exchangeLabel: {\r\n    color: theme.palette.warning.dark,\r\n    fontSize: '2em',\r\n    fontFamily: 'LULO',\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  searchInput: {\r\n    marginTop: theme.spacing(1),\r\n    maxWidth: 300\r\n  },\r\n  platforms: {\r\n    display: 'block',\r\n    height: `calc(100vh - ${theme.custom.layout.topAppBarHeight + theme.custom.layout.footerHeight + theme.spacing(12)}px)`,\r\n    overflow: 'scroll',\r\n    marginTop: theme.spacing(1),\r\n    paddingTop: theme.spacing(1)\r\n  },\r\n  label: {\r\n    fontSize: '22px',\r\n    fontFamily: 'fontMedium',\r\n    color: 'rgb(60,60,60)'\r\n  },\r\n  image: {\r\n    width: 30,\r\n    height: 30,\r\n    marginTop: theme.spacing(0.5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 30,\r\n      height: 20\r\n    },\r\n  },\r\n  desc: {\r\n    color: '#555',\r\n    fontSize: 14,\r\n    fontFamily: 'fontMedium',\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst DexPlatform = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { markets, setMarkets, setSearchInvest, loadingSerach } = useContext(AppContext);\r\n\r\n  const handleChange = (event) => {\r\n    var tmpArray = JSON.parse(JSON.stringify(markets));\r\n    if(event.target.checked){\r\n      tmpArray.push(event.target.name.toLowerCase());\r\n      setMarkets(tmpArray);\r\n    } else {\r\n      const index = tmpArray.indexOf(event.target.name.toLowerCase());\r\n      if(index > -1)\r\n        tmpArray.splice(index,1);\r\n      \r\n      setMarkets(tmpArray);\r\n    }\r\n  };\r\n\r\n  const searchInvest = () => {\r\n    setSearchInvest(true);\r\n  }\r\n  \r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Grid container item justifyContent=\"center\" xs={12} >\r\n          <Typography className={classes.exchangeLabel}>MARKETS</Typography>\r\n      </Grid>\r\n      <Grid container item justifyContent=\"center\" xs={12}>\r\n        <Typography className={classes.desc}>Select the markets you have invested in below and click search to get the value of your reputation.</Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <div className={classes.platforms}>\r\n          {EXCHANGE_PLATFORMS.map((index) => {\r\n              return ( \r\n                <FormControlLabel\r\n                  classes={{label: classes.label}}\r\n                  key={index}\r\n                  style={{marginBottom: theme.spacing(1), display: 'flex'}}\r\n                  control={<CustomCheckbox name={index} onChange={handleChange} />}\r\n                  label={index}\r\n                />\r\n              )\r\n          })}\r\n        </div>\r\n      </Grid> \r\n      <Grid item container justifyContent=\"center\" xs={12}>\r\n        <ContainedButton onClick={searchInvest} loading={loadingSerach} style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '2.5rem',\r\n                marginTop: '1rem',\r\n                borderColor: 'red',\r\n                cursor: 'pointer',\r\n                color: 'textSecondary'\r\n              }}>\r\n          Search\r\n        </ContainedButton>\r\n      </Grid> \r\n    </div>\r\n  );\r\n};\r\n\r\nDexPlatform.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default DexPlatform;\r\n","/**** add token into header url */\r\nexport function makeTokenHeader(token) {\r\n    const headerConfig = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    return headerConfig;\r\n}","import React, {useContext, useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport ContainedButton from 'components/UI/Buttons/ContainedButton';\r\nimport { AppContext } from 'contexts';\r\nimport { serverAddress } from 'constants/serverAddress';\r\nimport { makeTokenHeader } from 'utils/headerConfig';\r\nimport Image from 'components/UI/Image';\r\nimport RewardModal from 'components/RewardModal';\r\nimport { contractInstance } from 'services/contractInstance';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  reputation: {\r\n    fontSize: 24,\r\n    fontWeight: 900,\r\n    marginRight: theme.spacing(1),\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  infoboard: {\r\n    padding: theme.spacing(1,3),\r\n    width: '100%',\r\n    border: '1px solid',\r\n    borderColor: 'rgb(255,255,255,0.4)',\r\n    borderRadius: '6px',\r\n    marginBottom: theme.spacing(4),\r\n    boxShadow: '0px 0px 5px 0 rgba(243,243,243,.8)',\r\n    backgroundColor: 'rgb(255,255,255)'\r\n  },\r\n  divider: {\r\n    border: '1px solid',\r\n    borderColor: 'rgb(60,60,60,0.8)',\r\n    width: '100%',\r\n    margin: theme.spacing(1,0)\r\n  },\r\n  searchPan: {\r\n    padding: theme.spacing(1,2),\r\n    display: 'block',\r\n    width: '100%',\r\n    height: `calc(100vh - ${theme.custom.layout.topAppBarHeight + theme.custom.layout.footerHeight}px)`,\r\n    overflow: 'scroll'\r\n  },\r\n  market: {\r\n    fontSize: 20,\r\n    fontWeight: 600,\r\n    color: theme.palette.warning.dark,\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  property: {\r\n    fontFamily: 'fontMedium',\r\n    fontSize: 16,\r\n    fontWeight: 600,\r\n    color: 'rgb(100,100,100)'\r\n  },\r\n  valinfo: {\r\n    fontFamily: 'fontMedium',\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n    color: 'rgb(60,60,60)'\r\n  },\r\n  image: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      maxWidth: 200,\r\n      marginBottom: 60\r\n    },\r\n    maxWidth: 400\r\n  },\r\n}));\r\n\r\nconst RepCalc = props => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { markets, account, chainId, library, token, setLoadingSearch, isSearchInvest, setSearchInvest } = useContext(AppContext);\r\n\r\n  const contract = contractInstance(account, chainId, library);\r\n  const [ investInfo, setInvestInfo ] = useState([]);\r\n  const [state, setState] = useState({reputation: 0, borrowAmount: 0 });\r\n  const [loadingLendStatus, setLoadingLendStatus] = useState(false);\r\n  const [firstLoadStatus, setFirstLoadStatus] = useState(true);\r\n  const [isRewardDialog, setIsRewardDialog] = useState(false);\r\n  const[rewardMethod, setRewardMethod] = useState('interest');\r\n\r\n  useEffect(() => {\r\n    async function getInvest(param) {\r\n      const url = serverAddress + 'search';\r\n      const response = await axios.post(url,{address: account.toLowerCase(), invested_platforms:param}, makeTokenHeader(token));\r\n      if(response.data.success){\r\n        setFirstLoadStatus(false);\r\n        setInvestInfo(response.data.result.reputation);\r\n        setState({reputation: parseFloat(response.data.result.totalReputation).toFixed(2), borrowAmount: parseFloat(response.data.result.borrowAmount).toFixed(2)});\r\n      }\r\n      setLoadingSearch(false);\r\n    }\r\n    \r\n    if(!!token && isSearchInvest) {\r\n      setLoadingSearch(true);\r\n      enqueueSnackbar('Searching...', { variant: 'info' });\r\n      getInvest(markets).then(()=> {\r\n        enqueueSnackbar('Searching Completed', { variant: 'info' }); \r\n      });\r\n    } else if( isSearchInvest ){\r\n      setLoadingSearch(false);\r\n      enqueueSnackbar(`Please wait until login success for a moment.`, { variant: 'error' });\r\n    }  \r\n    setSearchInvest(false)\r\n  },[isSearchInvest]);\r\n\r\n  useEffect(() => {\r\n    async function getReputation() {\r\n      const url = serverAddress + 'getreputation';\r\n      const response = await axios.post(url,{address: account.toLowerCase()}, makeTokenHeader(token));\r\n      if(response.data.success){\r\n        setState({reputation: parseFloat(response.data.result).toFixed(2), borrowAmount: state.borrowAmount})\r\n        setLoadingSearch(false);\r\n      } \r\n    }\r\n    \r\n    if(!!token) {\r\n      getReputation();\r\n    }\r\n  },[account, token])\r\n\r\n  const handleLend = () => {\r\n    async function getRewardMethodInfo(userAccount) {\r\n      try {\r\n        const w_userInfo = await contract.userInfo(userAccount.toLowerCase())\r\n        if(w_userInfo.rewardMethod)\r\n        {\r\n          setRewardMethod('sharing')\r\n        } else {\r\n          setRewardMethod('interest')\r\n        }\r\n      }\r\n      catch(error) {\r\n        enqueueSnackbar(`An unknown error occurred.`, { variant: 'error' });\r\n      }\r\n    }\r\n    async function lend(param) {\r\n      const url = serverAddress + 'invest';\r\n      const response = await axios.post(url,{address: account.toLowerCase(), invested_platforms:param}, makeTokenHeader(token));\r\n      if(response.data.success){\r\n        await getRewardMethodInfo(account.toLowerCase());\r\n        enqueueSnackbar(`Lending success.`, { variant: 'success' });\r\n        setLoadingLendStatus(false);\r\n        setIsRewardDialog(true);\r\n      } else {\r\n        enqueueSnackbar(`You borrowed RepUSD already.`, { variant: 'error' });\r\n        setLoadingLendStatus(false);\r\n      }\r\n    }\r\n    setLoadingLendStatus(true);\r\n    if(!!token) {\r\n      lend(markets);\r\n    } else {\r\n      setLoadingLendStatus(false);\r\n      enqueueSnackbar(`Please wait until login success for a moment.`, { variant: 'error' });\r\n    }  \r\n  }\r\n\r\n  const closeHandler = () => {\r\n    setIsRewardDialog(false);\r\n    window.location.href=\"/vault\";\r\n  }\r\n  return (\r\n    <Grid container spacing={4} justifyContent=\"space-between\">\r\n      <Grid container item xs={12} md={5}>\r\n        <Typography style={{color: theme.palette.warning.dark}} className={classes.reputation}>My Reputation</Typography>\r\n        <Typography className={classes.reputation}>$ </Typography>\r\n        <Typography className={classes.reputation}>{state.reputation}</Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} md={4}>\r\n        <Typography style={{color: theme.palette.warning.dark}} className={classes.reputation}>Borrowable</Typography>\r\n        <Typography className={classes.reputation}>$ </Typography>\r\n        <Typography className={classes.reputation}>{state.borrowAmount}</Typography>\r\n      </Grid>\r\n      <Grid item container xs={12} md={3} justifyContent=\"flex-end\">\r\n        <ContainedButton loading={loadingLendStatus} onClick={handleLend} variant=\"outlined\" color=\"primary\" size=\"large\">\r\n        Borrow RepUSD\r\n        </ContainedButton>\r\n      </Grid>\r\n      <div className={classes.searchPan}>\r\n        {firstLoadStatus?\r\n          <Grid container item xs={12} style={{height: '100%'}} justifyContent=\"center\" alignContent=\"center\">\r\n            <Image\r\n              src=\"assets/images/RepUSD white1.png\"\r\n              alt=\"Web3 Legal Engineering\"\r\n              className={classes.image}\r\n              data-aos=\"fade-up\"\r\n              data-aos-easing=\"ease-out-cubic\"\r\n              data-aos-duration=\"2000\" \r\n            />\r\n          </Grid>\r\n          :\r\n          <></>\r\n        }\r\n        <Grid container item xs={12}>\r\n          {investInfo.map((eachInfo, index) => {\r\n            return(\r\n              <div className={classes.infoboard} key={index}>\r\n                <Grid item xs={12} key={index+'grid'}>\r\n                  <Typography className={classes.market} key={index+'market'}>{eachInfo.dapp}</Typography>\r\n                </Grid>\r\n                {eachInfo.reputation.map((rep,index_rep) => {\r\n                  let len = eachInfo.reputation.length - 1;\r\n                  let bDisplay = ( len !== index_rep);\r\n                  return(\r\n                    <Grid container key={index+'row'+index_rep}>\r\n                      <Grid item xs={12} md={3} key={index+'row'+index_rep+'col1'}>\r\n                        <Typography className={classes.property} key={index+'row'+index_rep+'pool'}>Pool</Typography>\r\n                        <Typography className={classes.valinfo} key={index+'row'+index_rep+'poolval'}>{rep.poolName}</Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={3} key={index+'row'+index_rep+'col2'}>\r\n                        <Typography className={classes.property} key={index+'row'+index_rep+'token'}>Token</Typography>\r\n                        <Typography className={classes.valinfo} key={index+'row'+index_rep+'symbol'}>{rep.symbol}</Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={3} key={index+'row'+index_rep+'col3'}>\r\n                        <Typography className={classes.property} key={index+'row'+index_rep+'amount'}>Amount</Typography>\r\n                        <Typography className={classes.valinfo} key={index+'row'+index_rep+'amountval'}>{parseFloat(rep.amount).toFixed(7)}</Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={3} key={index+'row'+index_rep+'col4'}>\r\n                        <Typography className={classes.property} key={index+'row'+index_rep+'usd'}>Value USD</Typography>\r\n                        <Typography className={classes.valinfo} key={index+'row'+index_rep+'usdval'}>{parseFloat(rep.repUSD).toFixed(2)}</Typography>\r\n                      </Grid>\r\n                      {bDisplay?\r\n                        <div className={classes.divider} key={index+'row'+index_rep+'divid'}></div>\r\n                        :\r\n                        <></>\r\n                      } \r\n                    </Grid>\r\n                  )\r\n                })}\r\n              </div>\r\n            )\r\n          })}\r\n        </Grid>\r\n      </div>\r\n      {isRewardDialog &&\r\n        <RewardModal\r\n          onClose={closeHandler}\r\n          account={account}\r\n          chainId={chainId}\r\n          library={library}\r\n          reward={rewardMethod}\r\n        />\r\n      }\r\n    </Grid>\r\n  );\r\n};\r\n\r\nRepCalc.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default RepCalc;\r\n","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\r\n\r\nimport Section from 'hoc/Section';\r\nimport DexPlatform from './DexPlatform';\r\nimport RepCalc from './RepCalc';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#000'\r\n  },\r\n  section: {\r\n    padding: theme.spacing(3, 1),\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: theme.spacing(4, 5),\r\n    },\r\n  }\r\n}));\r\n\r\nconst Lend = () => {\r\n  const classes = useStyles();\r\n\r\n  AOS.init({\r\n    once: true,\r\n    delay: 50,\r\n    duration: 500,\r\n    easing: 'ease-in-out',\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Section className={classes.section}>\r\n        <div className={classes.root}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n            spacing={4}\r\n          >\r\n            <Grid\r\n              container\r\n              item\r\n              xs={12}\r\n              md={3}\r\n            >\r\n              <DexPlatform />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={9}\r\n            >\r\n              <RepCalc />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Section>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Lend;\r\n"],"sourceRoot":""}