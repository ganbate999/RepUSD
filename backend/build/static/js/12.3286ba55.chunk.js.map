{"version":3,"sources":["components/UI/Image/index.js","hoc/Section/index.js","components/UI/SectionHeader/index.js","containers/Tutorial/Tutorial/index.js","containers/Tutorial/index.js"],"names":["useStyles","makeStyles","root","width","height","dBlock","display","Image","props","src","srcSet","alt","lazy","lazyProps","className","rest","classes","clsx","effect","defaultProps","theme","margin","padding","spacing","breakpoints","up","fullWidth","maxWidth","disablePadding","narrow","Section","children","alternate","marginBottom","disableGutter","title","fontWeight","cta","marginLeft","SectionHeader","titleVariant","subtitleVariant","subtitle","subtitleColor","label","overline","fadeUp","align","ctaAlign","ctaGroup","titleClasses","labelProps","titleProps","subtitleProps","justifyGrid","justifyCta","container","data-aos","item","justifyContent","xs","variant","color","component","length","alignItems","wrap","map","index","image","down","mobileImageContainer","position","left","top","Tutorial","setIsSwapDialog","account","useTheme","isMd","useMediaQuery","defaultMatches","id","Grid","direction","md","style","flexDirection","palette","text","primary","fontSize","textAlign","lineHeight","backgroundColor","Tutorials","AOS","init","once","delay","duration","easing"],"mappings":"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","file":"static/js/12.3286ba55.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  dBlock: {\r\n    display: 'block',\r\n  },\r\n}));\r\n/**\r\n * Component to display the images\r\n *\r\n * @param {Object} props\r\n */\r\nconst Image = props => {\r\n  const { src, srcSet, alt, lazy, lazyProps, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  if (lazy) {\r\n    return (\r\n      <LazyLoadImage\r\n        className={clsx('image', classes.root, classes.dBlock, className)}\r\n        alt={alt}\r\n        src={src}\r\n        srcSet={srcSet}\r\n        effect=\"opacity\"\r\n        {...lazyProps}\r\n        {...rest}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <img\r\n      className={clsx('image', classes.root, className)}\r\n      alt={alt}\r\n      src={src}\r\n      srcSet={srcSet}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nImage.defaultProps = {\r\n  alt: '...',\r\n  lazy: true,\r\n  lazyProps: {\r\n    width: 'auto',\r\n    height: 'auto',\r\n  },\r\n};\r\n\r\nImage.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Source of the image\r\n   */\r\n  src: PropTypes.string.isRequired,\r\n  /**\r\n   * Source set for the responsive images\r\n   */\r\n  srcSet: PropTypes.string,\r\n  /**\r\n   * Image title\r\n   */\r\n  alt: PropTypes.string,\r\n  /**\r\n   * Should lazy load the image\r\n   */\r\n  lazy: PropTypes.bool,\r\n};\r\n\r\nexport default Image;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(6, 2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: theme.spacing(8, 10),\r\n    },\r\n  },\r\n  fullWidth: {\r\n    maxWidth: '100%',\r\n  },\r\n  disablePadding: {\r\n    padding: 0,\r\n  },\r\n  narrow: {\r\n    maxWidth: 800,\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the sections\r\n *\r\n * @param {Object} props\r\n */\r\nconst Section = props => {\r\n  const {\r\n    children,\r\n    fullWidth,\r\n    narrow,\r\n    disablePadding,\r\n    alternate,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <section\r\n      className={clsx(\r\n        'section',\r\n        classes.root,\r\n        fullWidth ? classes.fullWidth : {},\r\n        narrow ? classes.narrow : {},\r\n        disablePadding ? classes.disablePadding : {},\r\n        alternate ? classes.alternate : {},\r\n        className,\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Children to placed inside the section\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Should show narrow sections\r\n   */\r\n  narrow: PropTypes.bool,\r\n  /**\r\n   * Should the section be full width\r\n   */\r\n  fullWidth: PropTypes.bool,\r\n  /**\r\n   * Should the section render with no padding\r\n   */\r\n  disablePadding: PropTypes.bool,\r\n};\r\n\r\nexport default Section;\r\n","\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginBottom: theme.spacing(3),\r\n    [theme.breakpoints.up('md')]: {\r\n      marginBottom: theme.spacing(4),\r\n    },\r\n  },\r\n  disableGutter: {\r\n    marginBottom: 0,\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n  cta: {\r\n    marginLeft: theme.spacing(1),\r\n    '&:first-child': {\r\n      marginLeft: theme.spacing(0),\r\n    },\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the section headers\r\n *\r\n * @param {Object} props\r\n */\r\nconst SectionHeader = props => {\r\n  const {\r\n    title,\r\n    titleVariant,\r\n    subtitleVariant,\r\n    subtitle,\r\n    subtitleColor,\r\n    label,\r\n    overline,\r\n    fadeUp,\r\n    align,\r\n    ctaAlign,\r\n    ctaGroup,\r\n    disableGutter,\r\n    titleClasses,\r\n    className,\r\n    labelProps,\r\n    titleProps,\r\n    subtitleProps,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n  let justifyGrid = 'center';\r\n  let justifyCta = 'center';\r\n  if (align === 'left') {\r\n    justifyGrid = 'flex-start';\r\n  } else if (align === 'right') {\r\n    justifyGrid = 'flex-end';\r\n  }\r\n  if (ctaAlign === 'left') {\r\n    justifyCta = 'flex-start';\r\n  } else if (ctaAlign === 'right') {\r\n    justifyCta = 'flex-end';\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      data-aos={fadeUp ? 'fade-up' : ''}\r\n      className={clsx(\r\n        'section-header',\r\n        classes.root,\r\n        disableGutter ? classes.disableGutter : {},\r\n        className,\r\n      )}\r\n      {...rest}\r\n    >\r\n      {overline && (\r\n        <Grid\r\n          item\r\n          container\r\n          justifyContent={justifyGrid}\r\n          xs={12}\r\n          className=\"section-header__overline-wrapper\"\r\n        >\r\n          {overline}\r\n        </Grid>\r\n      )}\r\n      {label && (\r\n        <Grid item xs={12} className=\"section-header__label-wrapper\">\r\n          <Typography\r\n            variant=\"overline\"\r\n            color='textPrimary'\r\n            component=\"p\"\r\n            align={align || 'center'}\r\n            {...labelProps}\r\n          >\r\n            {label}\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12} className=\"section-header__title-wrapper\">\r\n        <Typography\r\n          variant={titleVariant}\r\n          align={align || 'center'}\r\n          className={clsx(\r\n            'section-header__title',\r\n            classes.title,\r\n            titleClasses ? titleClasses : {},\r\n          )}\r\n          color=\"textPrimary\"\r\n          {...titleProps}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Grid>\r\n      {subtitle && (\r\n        <Grid item xs={12} className=\"section-header__subtitle-wrapper\">\r\n          <Typography\r\n            variant={subtitleVariant || 'h6'}\r\n            align={align || 'center'}\r\n            color={subtitleColor || 'textSecondary'}\r\n            className=\"section-header__subtitle\"\r\n            {...subtitleProps}\r\n          >\r\n            {subtitle}\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n      {ctaGroup && ctaGroup.length && (\r\n        <Grid item xs={12} className=\"section-header__cta-wrapper\">\r\n          <Grid\r\n            container\r\n            justifyContent={justifyCta}\r\n            alignItems=\"center\"\r\n            wrap=\"nowrap\"\r\n            className=\"section-header__cta-container\"\r\n          >\r\n            {ctaGroup.map((item, index) => (\r\n              <div\r\n                key={index}\r\n                className={clsx(\r\n                  'section-header__cta-item-wrapper',\r\n                  classes.cta,\r\n                )}\r\n              >\r\n                {item}\r\n              </div>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nSectionHeader.defaultProps = {\r\n  titleVariant: 'h4',\r\n  labelProps: {},\r\n  titleProps: {},\r\n  subtitleProps: {},\r\n};\r\n\r\nSectionHeader.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Title of the section header\r\n   */\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\r\n  /**\r\n   * Subtitle of the section header\r\n   */\r\n  subtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  /**\r\n   * Label title of the section header\r\n   */\r\n  label: PropTypes.string,\r\n  /**\r\n   * The overline component in the section header\r\n   */\r\n  overline: PropTypes.node,\r\n  /**\r\n   * Array of the CTAs\r\n   */\r\n  ctaGroup: PropTypes.arrayOf(PropTypes.node),\r\n  /**\r\n   * Whether to fade up on scroll\r\n   */\r\n  fadeUp: PropTypes.bool,\r\n  /**\r\n   * Header content (title, subtitle, CTAs) alignment\r\n   */\r\n  align: PropTypes.oneOf(['right', 'left', 'center']),\r\n  /**\r\n   * Whether to disable bottom margin of the section\r\n   */\r\n  disableGutter: PropTypes.bool,\r\n  /**\r\n   * Styles classes to be attached to the title from the parent component\r\n   */\r\n  titleClasses: PropTypes.string,\r\n  /**\r\n   * Title variant\r\n   */\r\n  titleVariant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'h7', 'h8', 'h9'])\r\n    .isRequired,\r\n  /**\r\n   * SubTitle variant\r\n   */\r\n  subtitleVariant: PropTypes.oneOf([\r\n    'h1',\r\n    'h2',\r\n    'h3',\r\n    'h4',\r\n    'h5',\r\n    'h6',\r\n    'h7',\r\n    'h8',\r\n    'h9',\r\n    'subtitle1',\r\n    'subtitle2',\r\n    'body1',\r\n    'body2',\r\n  ]),\r\n  /**\r\n   * SubTitle color\r\n   */\r\n  subtitleColor: PropTypes.oneOf([\r\n    'textPrimary',\r\n    'textSecondary',\r\n    'primary',\r\n    'secondary',\r\n  ]),\r\n  /**\r\n   * Additional properties to pass to the label Typography component\r\n   */\r\n  labelProps: PropTypes.object,\r\n  /**\r\n   * Additional properties to pass to the title Typography component\r\n   */\r\n  titleProps: PropTypes.object,\r\n  /**\r\n   * Additional properties to pass to the subtitle Typography component\r\n   */\r\n  subtitleProps: PropTypes.object,\r\n};\r\n\r\nexport default SectionHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useMediaQuery, Grid } from '@material-ui/core';\r\n\r\nimport ContainedButton from 'components/UI/Buttons/ContainedButton';\r\nimport Image from 'components/UI/Image';\r\nimport SectionHeader from 'components/UI/SectionHeader';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  image: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      maxWidth: 500,\r\n      marginBottom: 60\r\n    },\r\n  },\r\n  mobileImageContainer: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      position: 'absolute', left: 0, top: -70,\r\n    },\r\n    position: 'absolute', right: 0, top: -70,\r\n  }\r\n}));\r\n\r\nconst Tutorial = props => {\r\n  const { setIsSwapDialog, account, className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\r\n    defaultMatches: true,\r\n  });\r\n\r\n  const getTokenHandler = () => {\r\n    if (account) {\r\n      setIsSwapDialog(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id='prologue' className={clsx(classes.root, className)} {...rest}>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        spacing={4}\r\n        direction={isMd ? 'row' : 'column-reverse'}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={8}\r\n          data-aos={'fade-up'}\r\n        >\r\n          <SectionHeader\r\n            title={\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <span style={{ color: theme.palette.text.primary }}>\r\n                Simple Steps to use RepUSD\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n                <span style={{ color: theme.palette.text.primary, fontSize: 18, fontWeight: '300', textAlign: 'justify', lineHeight: 1.8 }}>\r\n                RepUSD is very simple to use. Here are the steps to use RepUSD\r\n                <br />\r\n                <br />\r\n                1. Connect your wallet\r\n                <br />\r\n                2. Select smart contracts you have invested in and search. RepUSD’s search engine will search and find your investments in these Dapps. Your investments will be summed up and that will be the value of your reputation. The amount available for you to borrow will be displayed next to the value of your reputation.\r\n                <br />\r\n                3. Click the “Borrow RepUSD” button to borrow.\r\n                <br />\r\n                <br />\r\n                That’s it. To know more about this protocol, please keep reading this tutorial. \r\n                  <br />\r\n                  <br />\r\n                </span>\r\n              </div>\r\n            }\r\n            align={isMd ? \"left\" : 'center'}\r\n            disableGutter\r\n            titleVariant=\"h3\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        spacing={4}\r\n        direction={isMd ? 'row' : 'column-reverse'}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={4}\r\n          data-aos={'fade-up'}\r\n        />\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={8}\r\n          data-aos={'fade-up'}\r\n        >\r\n          <SectionHeader\r\n            title={\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <span style={{ color: theme.palette.text.primary }}>\r\n                What is RepUSD?\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n                <span style={{ color: theme.palette.text.primary, fontSize: 18, fontWeight: '300', textAlign: 'justify', lineHeight: 1.8 }}>\r\n                RepUSD is a reputation based lending protocol. Your reputation is based your involvement in DeFi. The value of your reputation is equal to the value of your investment in DeFi. If you have staked tokens, provided liquidity in pools or deposited in smart contracts, you have a reputation. The total value of your different investments is the value of your reputation. You can borrow against your reputation on RepUSD.\r\n                <br />\r\n                <br />\r\n                RepUSD brings a major aspect of traditional finance to DeFi. In traditional finance, people can get loans based on their reputations. A good client with a bank can get a loan without collateral based on his reputation. His reputation can be his history with the bank, his transaction volume, his fixed deposits with the bank, his net worth, his transaction history with other financial institutions and so on. Based on his reputation, traditional financial institutions can offer him credit without the need to present collateral.\r\n                <br />\r\n                <br />\r\n                RepUSD is bringing this to decentralized finance. With RepUSD, you can get a loan based on just your reputation. No collateral needed. RepUSD is built on the Binance Smart Chain.\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n              </div>\r\n            }\r\n            align={isMd ? \"left\" : 'center'}\r\n            disableGutter\r\n            titleVariant=\"h3\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        spacing={4}\r\n        direction={isMd ? 'row' : 'column-reverse'}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={8}\r\n          data-aos={'fade-up'}\r\n        >\r\n          <SectionHeader\r\n            title={\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <span style={{ color: theme.palette.text.primary }}>\r\n                How is my reputation calculated?\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n                <span style={{ color: theme.palette.text.primary, fontSize: 18, fontWeight: '300', textAlign: 'justify', lineHeight: 1.8 }}>\r\n                Your reputation is based on your investment in decentralized smart contracts. For example, if you have provided liquidity on Uniswap, that’s your reputation, If you have deposited in Aave, that is your reputation. RepUSD search engine crawls smart contracts and fetches the value of your investments and sums them up. The total value of your investments is the value of your reputation. Let’s say you have provided liquidity in Uniswap worth $5,000 and you also provided liquidity on Pancakeswap worth $8,000. The total value of your reputation will be $13,000.\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n              </div>\r\n            }\r\n            align={isMd ? \"left\" : 'center'}\r\n            disableGutter\r\n            titleVariant=\"h3\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        spacing={4}\r\n        direction={isMd ? 'row' : 'column-reverse'}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={4}\r\n          data-aos={'fade-up'}\r\n        />\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={8}\r\n          data-aos={'fade-up'}\r\n        >\r\n          <SectionHeader\r\n            title={\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <span style={{ color: theme.palette.text.primary }}>\r\n                Multi-Chain Support\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n                <span style={{ color: theme.palette.text.primary, fontSize: 18, fontWeight: '300', textAlign: 'justify', lineHeight: 1.8 }}>\r\n                RepUSD takes into account your investments in smart contracts on different networks. Whether your investment is in smart contracts on Binance Smart Chain, Ethereum or Polygon, RepUSD recognizes your investments on different chains and adds it to the value of your reputation.\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n              </div>\r\n            }\r\n            align={isMd ? \"left\" : 'center'}\r\n            disableGutter\r\n            titleVariant=\"h3\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        spacing={4}\r\n        direction={isMd ? 'row' : 'column-reverse'}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={8}\r\n          data-aos={'fade-up'}\r\n        >\r\n          <SectionHeader\r\n            title={\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <span style={{ color: theme.palette.text.primary }}>\r\n                Borrowing on RepUSD\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n                <span style={{ color: theme.palette.text.primary, fontSize: 18, fontWeight: '300', textAlign: 'justify', lineHeight: 1.8 }}>\r\n                On RepUSD, you do not need to deposit any tokens as collateral to obtain loans. Your collateral is your reputation. You can borrow up to 75% of the value of your reputation. For example, if the value of your reputation is $10,000, you can borrow up to $7,500 which is 75% of your reputation.\r\n                  <br />\r\n                  <br />\r\n                If any of your investment is a pool containing RepUSD tokens, you can borrow up to 90% of your reputation. For example, if you invested $10,000 in pools containing RepUSD tokens, you can borrow up to $9,000.\r\n                  <br />\r\n                  <br />\r\n                In the reputation page, you can see the value of your reputation. Placed just beside this is the amount available for you to borrow. It is tagged “Borrowable”. The Borrowable amount is the amount you can borrow immediately.\r\n                  <br />\r\n                  <br />\r\n                  When you borrow on RepUSD, you receive RepUSD tokens. The RepUSD tokens you borrow are deposited on your behalf in an interest yielding vault. By default, the vault pays 36% interest per annum.\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n              </div>\r\n            }\r\n            align={isMd ? \"left\" : 'center'}\r\n            disableGutter\r\n            titleVariant=\"h3\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        spacing={4}\r\n        direction={isMd ? 'row' : 'column-reverse'}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={4}\r\n          data-aos={'fade-up'}\r\n        />\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={8}\r\n          data-aos={'fade-up'}\r\n        >\r\n          <SectionHeader\r\n            title={\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <span style={{ color: theme.palette.text.primary }}>\r\n                Earning Interest\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n                <span style={{ color: theme.palette.text.primary, fontSize: 18, fontWeight: '300', textAlign: 'justify', lineHeight: 1.8 }}>\r\n                Borrowed RepUSD tokens are deposited in an interest yielding vault with an APY of 36%. The interest is calculated daily and added to your account. You can see your earned interest and interest rate in “My Earnings”. You can claim your earned interest and withdraw to your connected wallet at anytime.\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n              </div>\r\n            }\r\n            align={isMd ? \"left\" : 'center'}\r\n            disableGutter\r\n            titleVariant=\"h3\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        spacing={4}\r\n        direction={isMd ? 'row' : 'column-reverse'}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={8}\r\n          data-aos={'fade-up'}\r\n        >\r\n          <SectionHeader\r\n            title={\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <span style={{ color: theme.palette.text.primary }}>\r\n                RepUSD tokens\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n                <span style={{ color: theme.palette.text.primary, fontSize: 18, fontWeight: '300', textAlign: 'justify', lineHeight: 1.8 }}>\r\n                RepUSD token is a stablecoin. 1RepUSD = $1. RepUSD has no pre-mined coin. RepUSD is only minted when a user borrows based on his reputation. RepUSD token is a stablecoin backed by the value of the reputation of users. RepUSD tokens are traded on popular AMMs and DEX. RepUSD is a BEP20 token.\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n              </div>\r\n            }\r\n            align={isMd ? \"left\" : 'center'}\r\n            disableGutter\r\n            titleVariant=\"h3\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        spacing={4}\r\n        direction={isMd ? 'row' : 'column-reverse'}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={4}\r\n          data-aos={'fade-up'}\r\n        />\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={8}\r\n          data-aos={'fade-up'}\r\n        >\r\n          <SectionHeader\r\n            title={\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <span style={{ color: theme.palette.text.primary }}>\r\n                Burning RepUSD tokens\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n                <span style={{ color: theme.palette.text.primary, fontSize: 18, fontWeight: '300', textAlign: 'justify', lineHeight: 1.8 }}>\r\n                RepUSD tokens are backed by the reputation of users. The reputation of users is based on their investments in different decentralized applications and smart contracts. If a user withdraws his investment, his reputation drops, and this burns associated RepUSD tokens. For example, if a user has investment of $5,000, the value of his reputation is $5,000. If he borrows based on this reputation, he receives 3,750RepUSD tokens. If the user withdraws $1,000 from his investment, the balance of his investment is $4,000. His reputation drops to $4,000. A $1,000 drop in reputation will automatically cause 750RepUSD to be burned.\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n              </div>\r\n            }\r\n            align={isMd ? \"left\" : 'center'}\r\n            disableGutter\r\n            titleVariant=\"h3\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        spacing={4}\r\n        direction={isMd ? 'row' : 'column-reverse'}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={12}\r\n          data-aos={'fade-up'}\r\n        >\r\n          <SectionHeader\r\n            title={\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <span style={{ color: theme.palette.text.primary, fontSize: 18, fontWeight: '600', textAlign: 'center', lineHeight: 1.8 }}>\r\n                If you need further assistance kindly send a mail to admin@repusd.finance.\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n              </div>\r\n            }\r\n            align={isMd ? \"left\" : 'center'}\r\n            disableGutter\r\n            titleVariant=\"h3\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nTutorial.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Tutorial;\r\n","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\r\n\r\nimport Section from 'hoc/Section';\r\nimport Tutorial from './Tutorial';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgb(237, 240, 244)'\r\n  },\r\n}));\r\n\r\nconst Tutorials = () => {\r\n  const classes = useStyles();\r\n\r\n  AOS.init({\r\n    once: true,\r\n    delay: 50,\r\n    duration: 500,\r\n    easing: 'ease-in-out',\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Section >\r\n        <Tutorial />\r\n      </Section>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Tutorials;\r\n"],"sourceRoot":""}