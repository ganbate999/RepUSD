{"version":3,"sources":["components/UI/Image/index.js","hoc/Section/index.js","components/UI/SectionHeader/index.js","containers/Doc/LendDesc/index.js","containers/Doc/index.js"],"names":["useStyles","makeStyles","root","width","height","dBlock","display","Image","props","src","srcSet","alt","lazy","lazyProps","className","rest","classes","clsx","effect","defaultProps","theme","margin","padding","spacing","breakpoints","up","fullWidth","maxWidth","disablePadding","narrow","Section","children","alternate","marginBottom","disableGutter","title","fontWeight","cta","marginLeft","SectionHeader","titleVariant","subtitleVariant","subtitle","subtitleColor","label","overline","fadeUp","align","ctaAlign","ctaGroup","titleClasses","labelProps","titleProps","subtitleProps","justifyGrid","justifyCta","container","data-aos","item","justifyContent","xs","variant","color","component","length","alignItems","wrap","map","index","image","down","mobileImageContainer","position","left","top","LendDesc","setIsSwapDialog","account","useTheme","isMd","useMediaQuery","defaultMatches","id","Grid","direction","md","data-aos-easing","data-aos-duration","style","flexDirection","palette","text","primary","fontSize","textAlign","lineHeight","ContainedButton","onClick","size","backgroundColor","Home","AOS","init","once","delay","duration","easing"],"mappings":"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","file":"static/js/9.956322f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  dBlock: {\r\n    display: 'block',\r\n  },\r\n}));\r\n/**\r\n * Component to display the images\r\n *\r\n * @param {Object} props\r\n */\r\nconst Image = props => {\r\n  const { src, srcSet, alt, lazy, lazyProps, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  if (lazy) {\r\n    return (\r\n      <LazyLoadImage\r\n        className={clsx('image', classes.root, classes.dBlock, className)}\r\n        alt={alt}\r\n        src={src}\r\n        srcSet={srcSet}\r\n        effect=\"opacity\"\r\n        {...lazyProps}\r\n        {...rest}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <img\r\n      className={clsx('image', classes.root, className)}\r\n      alt={alt}\r\n      src={src}\r\n      srcSet={srcSet}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nImage.defaultProps = {\r\n  alt: '...',\r\n  lazy: true,\r\n  lazyProps: {\r\n    width: 'auto',\r\n    height: 'auto',\r\n  },\r\n};\r\n\r\nImage.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Source of the image\r\n   */\r\n  src: PropTypes.string.isRequired,\r\n  /**\r\n   * Source set for the responsive images\r\n   */\r\n  srcSet: PropTypes.string,\r\n  /**\r\n   * Image title\r\n   */\r\n  alt: PropTypes.string,\r\n  /**\r\n   * Should lazy load the image\r\n   */\r\n  lazy: PropTypes.bool,\r\n};\r\n\r\nexport default Image;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(6, 2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: theme.spacing(8, 10),\r\n    },\r\n  },\r\n  fullWidth: {\r\n    maxWidth: '100%',\r\n  },\r\n  disablePadding: {\r\n    padding: 0,\r\n  },\r\n  narrow: {\r\n    maxWidth: 800,\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the sections\r\n *\r\n * @param {Object} props\r\n */\r\nconst Section = props => {\r\n  const {\r\n    children,\r\n    fullWidth,\r\n    narrow,\r\n    disablePadding,\r\n    alternate,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <section\r\n      className={clsx(\r\n        'section',\r\n        classes.root,\r\n        fullWidth ? classes.fullWidth : {},\r\n        narrow ? classes.narrow : {},\r\n        disablePadding ? classes.disablePadding : {},\r\n        alternate ? classes.alternate : {},\r\n        className,\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Children to placed inside the section\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Should show narrow sections\r\n   */\r\n  narrow: PropTypes.bool,\r\n  /**\r\n   * Should the section be full width\r\n   */\r\n  fullWidth: PropTypes.bool,\r\n  /**\r\n   * Should the section render with no padding\r\n   */\r\n  disablePadding: PropTypes.bool,\r\n};\r\n\r\nexport default Section;\r\n","\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginBottom: theme.spacing(3),\r\n    [theme.breakpoints.up('md')]: {\r\n      marginBottom: theme.spacing(4),\r\n    },\r\n  },\r\n  disableGutter: {\r\n    marginBottom: 0,\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n  },\r\n  cta: {\r\n    marginLeft: theme.spacing(1),\r\n    '&:first-child': {\r\n      marginLeft: theme.spacing(0),\r\n    },\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the section headers\r\n *\r\n * @param {Object} props\r\n */\r\nconst SectionHeader = props => {\r\n  const {\r\n    title,\r\n    titleVariant,\r\n    subtitleVariant,\r\n    subtitle,\r\n    subtitleColor,\r\n    label,\r\n    overline,\r\n    fadeUp,\r\n    align,\r\n    ctaAlign,\r\n    ctaGroup,\r\n    disableGutter,\r\n    titleClasses,\r\n    className,\r\n    labelProps,\r\n    titleProps,\r\n    subtitleProps,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n  let justifyGrid = 'center';\r\n  let justifyCta = 'center';\r\n  if (align === 'left') {\r\n    justifyGrid = 'flex-start';\r\n  } else if (align === 'right') {\r\n    justifyGrid = 'flex-end';\r\n  }\r\n  if (ctaAlign === 'left') {\r\n    justifyCta = 'flex-start';\r\n  } else if (ctaAlign === 'right') {\r\n    justifyCta = 'flex-end';\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      data-aos={fadeUp ? 'fade-up' : ''}\r\n      className={clsx(\r\n        'section-header',\r\n        classes.root,\r\n        disableGutter ? classes.disableGutter : {},\r\n        className,\r\n      )}\r\n      {...rest}\r\n    >\r\n      {overline && (\r\n        <Grid\r\n          item\r\n          container\r\n          justifyContent={justifyGrid}\r\n          xs={12}\r\n          className=\"section-header__overline-wrapper\"\r\n        >\r\n          {overline}\r\n        </Grid>\r\n      )}\r\n      {label && (\r\n        <Grid item xs={12} className=\"section-header__label-wrapper\">\r\n          <Typography\r\n            variant=\"overline\"\r\n            color='textPrimary'\r\n            component=\"p\"\r\n            align={align || 'center'}\r\n            {...labelProps}\r\n          >\r\n            {label}\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={12} className=\"section-header__title-wrapper\">\r\n        <Typography\r\n          variant={titleVariant}\r\n          align={align || 'center'}\r\n          className={clsx(\r\n            'section-header__title',\r\n            classes.title,\r\n            titleClasses ? titleClasses : {},\r\n          )}\r\n          color=\"textPrimary\"\r\n          {...titleProps}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      </Grid>\r\n      {subtitle && (\r\n        <Grid item xs={12} className=\"section-header__subtitle-wrapper\">\r\n          <Typography\r\n            variant={subtitleVariant || 'h6'}\r\n            align={align || 'center'}\r\n            color={subtitleColor || 'textSecondary'}\r\n            className=\"section-header__subtitle\"\r\n            {...subtitleProps}\r\n          >\r\n            {subtitle}\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n      {ctaGroup && ctaGroup.length && (\r\n        <Grid item xs={12} className=\"section-header__cta-wrapper\">\r\n          <Grid\r\n            container\r\n            justifyContent={justifyCta}\r\n            alignItems=\"center\"\r\n            wrap=\"nowrap\"\r\n            className=\"section-header__cta-container\"\r\n          >\r\n            {ctaGroup.map((item, index) => (\r\n              <div\r\n                key={index}\r\n                className={clsx(\r\n                  'section-header__cta-item-wrapper',\r\n                  classes.cta,\r\n                )}\r\n              >\r\n                {item}\r\n              </div>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nSectionHeader.defaultProps = {\r\n  titleVariant: 'h4',\r\n  labelProps: {},\r\n  titleProps: {},\r\n  subtitleProps: {},\r\n};\r\n\r\nSectionHeader.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Title of the section header\r\n   */\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\r\n  /**\r\n   * Subtitle of the section header\r\n   */\r\n  subtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  /**\r\n   * Label title of the section header\r\n   */\r\n  label: PropTypes.string,\r\n  /**\r\n   * The overline component in the section header\r\n   */\r\n  overline: PropTypes.node,\r\n  /**\r\n   * Array of the CTAs\r\n   */\r\n  ctaGroup: PropTypes.arrayOf(PropTypes.node),\r\n  /**\r\n   * Whether to fade up on scroll\r\n   */\r\n  fadeUp: PropTypes.bool,\r\n  /**\r\n   * Header content (title, subtitle, CTAs) alignment\r\n   */\r\n  align: PropTypes.oneOf(['right', 'left', 'center']),\r\n  /**\r\n   * Whether to disable bottom margin of the section\r\n   */\r\n  disableGutter: PropTypes.bool,\r\n  /**\r\n   * Styles classes to be attached to the title from the parent component\r\n   */\r\n  titleClasses: PropTypes.string,\r\n  /**\r\n   * Title variant\r\n   */\r\n  titleVariant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'h7', 'h8', 'h9'])\r\n    .isRequired,\r\n  /**\r\n   * SubTitle variant\r\n   */\r\n  subtitleVariant: PropTypes.oneOf([\r\n    'h1',\r\n    'h2',\r\n    'h3',\r\n    'h4',\r\n    'h5',\r\n    'h6',\r\n    'h7',\r\n    'h8',\r\n    'h9',\r\n    'subtitle1',\r\n    'subtitle2',\r\n    'body1',\r\n    'body2',\r\n  ]),\r\n  /**\r\n   * SubTitle color\r\n   */\r\n  subtitleColor: PropTypes.oneOf([\r\n    'textPrimary',\r\n    'textSecondary',\r\n    'primary',\r\n    'secondary',\r\n  ]),\r\n  /**\r\n   * Additional properties to pass to the label Typography component\r\n   */\r\n  labelProps: PropTypes.object,\r\n  /**\r\n   * Additional properties to pass to the title Typography component\r\n   */\r\n  titleProps: PropTypes.object,\r\n  /**\r\n   * Additional properties to pass to the subtitle Typography component\r\n   */\r\n  subtitleProps: PropTypes.object,\r\n};\r\n\r\nexport default SectionHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useMediaQuery, Grid } from '@material-ui/core';\r\n\r\nimport ContainedButton from 'components/UI/Buttons/ContainedButton';\r\nimport Image from 'components/UI/Image';\r\nimport SectionHeader from 'components/UI/SectionHeader';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  image: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      maxWidth: 500,\r\n      marginBottom: 60\r\n    },\r\n  },\r\n  mobileImageContainer: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      position: 'absolute', left: 0, top: -70,\r\n    },\r\n    position: 'absolute', right: 0, top: -70,\r\n  }\r\n}));\r\n\r\nconst LendDesc = props => {\r\n  const { setIsSwapDialog, account, className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\r\n    defaultMatches: true,\r\n  });\r\n\r\n  const getTokenHandler = () => {\r\n    if (account) {\r\n      setIsSwapDialog(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id='prologue' className={clsx(classes.root, className)} {...rest}>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        spacing={4}\r\n        direction={isMd ? 'row' : 'column-reverse'}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={5}\r\n          data-aos={'fade-up'}\r\n        >\r\n          <Image\r\n            src=\"assets/images/hand.png\"\r\n            alt=\"Web3 Legal Engineering\"\r\n            className={classes.image}\r\n            data-aos=\"fade-right\"\r\n            data-aos-easing=\"ease-out-cubic\"\r\n            data-aos-duration=\"2000\"\r\n          />\r\n          <div className={classes.mobileImageContainer}>\r\n            <Image\r\n              src=\"assets/images/cloud.svg\"\r\n              alt=\"Web3 Legal Engineering\"\r\n              className={classes.image}\r\n              data-aos=\"fade-left\"\r\n              data-aos-easing=\"ease-out-cubic\"\r\n              data-aos-duration=\"2000\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          alignItems=\"center\"\r\n          xs={12}\r\n          md={7}\r\n          data-aos={'fade-up'}\r\n        >\r\n          <SectionHeader\r\n            title={\r\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <span style={{ color: theme.palette.text.primary }}>\r\n                  LENDING\r\n                  <br />\r\n                </span>\r\n                <span style={{ color: theme.palette.text.primary, fontSize: 18, fontWeight: '300', textAlign: 'justify', lineHeight: 1.8 }}>\r\n                RepUSD is a reputation based lending dapp. A user who has being investing in dapps can get loans from RepUSD without the need to deposit collateral. \r\n                  <br />\r\n                  <br />\r\n                </span>\r\n                <span style={{ color: theme.palette.text.primary, fontSize: 18, fontWeight: '300', textAlign: 'justify', lineHeight: 1.8 }}>\r\n                The user can borrow up to 75% of his reputation. But if any of his investment contains a RepUSD pool, the user can borrow up to 90% of that reputation.\r\n                  <br />\r\n                  <br />\r\n                </span>\r\n                <span style={{ color: theme.palette.text.primary, fontSize: 18, fontWeight: '300', textAlign: 'justify', lineHeight: 1.8 }}>\r\n                When a user borrows on RepUSD, RepUSD tokens are minted. The minted RepUSD are sent to an Interest yielding vault.\r\n                </span>\r\n              </div>\r\n            }\r\n            ctaGroup={[\r\n              <ContainedButton onClick={getTokenHandler} variant=\"outlined\" color=\"primary\" size=\"large\">\r\n                Search\r\n              </ContainedButton>,\r\n              <ContainedButton variant=\"outlined\" color=\"primary\" size=\"large\">\r\n                Borrow RepUSD\r\n              </ContainedButton>\r\n            ]}\r\n            align={isMd ? \"left\" : 'center'}\r\n            disableGutter\r\n            titleVariant=\"h3\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nLendDesc.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default LendDesc;\r\n","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\r\n\r\nimport Section from 'hoc/Section';\r\nimport LendDesc from './LendDesc';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#000'\r\n  },\r\n}));\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n\r\n  AOS.init({\r\n    once: true,\r\n    delay: 50,\r\n    duration: 500,\r\n    easing: 'ease-in-out',\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Section >\r\n        <LendDesc />\r\n      </Section>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}