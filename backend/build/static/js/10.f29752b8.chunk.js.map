{"version":3,"sources":["components/UI/Image/index.js","hoc/Section/index.js","components/UI/CustomRadio/index.js","components/RewardModal/index.js","constants/links/exchange-platforms.js","components/UI/CustomCheckbox/index.js","containers/Lend/DexPlatform/index.js","utils/headerConfig.js","containers/Lend/RepCalc/index.js","containers/Lend/index.js"],"names":["useStyles","makeStyles","root","width","height","dBlock","display","Image","props","src","srcSet","alt","lazy","lazyProps","className","rest","classes","clsx","effect","defaultProps","theme","margin","padding","spacing","breakpoints","up","fullWidth","maxWidth","disablePadding","narrow","Section","children","alternate","color","checked","CustomRadio","Radio","actionButton","backgroundColor","custom","palette","darkRed","minWidth","border","dialogActions","justifyContent","marginTop","marginRight","titleLine","marginBottom","label","labelLine","labelLine1","paddingRight","float","input","imagePad","background","borderRadius","image","dialogContent","down","maxHeight","default","container","gridCls","fontSize","RewardModal","onClose","account","chainId","library","reward","dialogClasses","dialogStyles","onFormSubmit","useSnackbar","enqueueSnackbar","contractInstance","ev","a","preventDefault","useState","rewardMethod","setRewardMethod","DialogWrapper","open","onSubmit","Typography","variant","DialogContent","dividers","Grid","item","alignItems","xs","md","RadioGroup","aria-label","value","onChange","event","target","FormControlLabel","style","control","flexDirection","ContainedButton","borderColor","cursor","onClick","EXCHANGE_PLATFORMS","CustomCheckbox","Checkbox","checkedIcon","icon","boxShadow","opacity","exchangeLabel","fontWeight","searchInput","platforms","layout","topAppBarHeight","footerHeight","overflow","paddingTop","desc","DexPlatform","useTheme","useContext","AppContext","markets","setMarkets","setSearchInvest","loadingSerach","handleChange","tmpArray","JSON","parse","stringify","push","name","toLowerCase","index","indexOf","splice","direction","map","loading","makeTokenHeader","token","headers","Authorization","reputation","reputationValue","infoboard","divider","searchPan","market","warning","dark","property","valinfo","RepCalc","setLoadingSearch","isSearchInvest","contract","investInfo","setInvestInfo","borrowAmount","state","setState","loadingLendStatus","setLoadingLendStatus","firstLoadStatus","setFirstLoadStatus","isRewardDialog","setIsRewardDialog","useEffect","param","url","serverAddress","axios","post","address","invested_platforms","response","data","success","result","parseFloat","totalReputation","toFixed","getInvest","then","getReputation","getRewardMethodInfo","userAccount","userInfo","lend","size","data-aos","data-aos-easing","data-aos-duration","eachInfo","dapp","rep","index_rep","bDisplay","length","poolName","symbol","amount","repUSD","window","location","href","section","Lend","AOS","init","once","delay","duration","easing"],"mappings":"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","file":"static/js/10.f29752b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  dBlock: {\r\n    display: 'block',\r\n  },\r\n}));\r\n/**\r\n * Component to display the images\r\n *\r\n * @param {Object} props\r\n */\r\nconst Image = props => {\r\n  const { src, srcSet, alt, lazy, lazyProps, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  if (lazy) {\r\n    return (\r\n      <LazyLoadImage\r\n        className={clsx('image', classes.root, classes.dBlock, className)}\r\n        alt={alt}\r\n        src={src}\r\n        srcSet={srcSet}\r\n        effect=\"opacity\"\r\n        {...lazyProps}\r\n        {...rest}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <img\r\n      className={clsx('image', classes.root, className)}\r\n      alt={alt}\r\n      src={src}\r\n      srcSet={srcSet}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nImage.defaultProps = {\r\n  alt: '...',\r\n  lazy: true,\r\n  lazyProps: {\r\n    width: 'auto',\r\n    height: 'auto',\r\n  },\r\n};\r\n\r\nImage.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Source of the image\r\n   */\r\n  src: PropTypes.string.isRequired,\r\n  /**\r\n   * Source set for the responsive images\r\n   */\r\n  srcSet: PropTypes.string,\r\n  /**\r\n   * Image title\r\n   */\r\n  alt: PropTypes.string,\r\n  /**\r\n   * Should lazy load the image\r\n   */\r\n  lazy: PropTypes.bool,\r\n};\r\n\r\nexport default Image;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    margin: '0 auto',\r\n    padding: theme.spacing(6, 2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: theme.spacing(8, 10),\r\n    },\r\n  },\r\n  fullWidth: {\r\n    maxWidth: '100%',\r\n  },\r\n  disablePadding: {\r\n    padding: 0,\r\n  },\r\n  narrow: {\r\n    maxWidth: 800,\r\n  },\r\n}));\r\n\r\n/**\r\n * Component to display the sections\r\n *\r\n * @param {Object} props\r\n */\r\nconst Section = props => {\r\n  const {\r\n    children,\r\n    fullWidth,\r\n    narrow,\r\n    disablePadding,\r\n    alternate,\r\n    className,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <section\r\n      className={clsx(\r\n        'section',\r\n        classes.root,\r\n        fullWidth ? classes.fullWidth : {},\r\n        narrow ? classes.narrow : {},\r\n        disablePadding ? classes.disablePadding : {},\r\n        alternate ? classes.alternate : {},\r\n        className,\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Children to placed inside the section\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Should show narrow sections\r\n   */\r\n  narrow: PropTypes.bool,\r\n  /**\r\n   * Should the section be full width\r\n   */\r\n  fullWidth: PropTypes.bool,\r\n  /**\r\n   * Should the section render with no padding\r\n   */\r\n  disablePadding: PropTypes.bool,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    color: \"#13c552\",\r\n    \"&$checked\": {\r\n        color: \"#13c552\"\r\n    }\r\n  },\r\n  checked: {},\r\n});\r\n\r\n// Inspired by blueprintjs\r\nexport default function CustomRadio(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Radio\r\n        classes={{\r\n            root: classes.root,\r\n            checked: classes.checked\r\n        }}\r\n        \r\n        {...props}\r\n    />\r\n  );\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { FormControlLabel } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport DialogWrapper, { dialogStyles } from 'hoc/DialogWrapper';\r\nimport ContainedButton from 'components/UI/Buttons/ContainedButton';\r\nimport { isEmpty, delay } from 'utils/utility';\r\nimport { contractInstance } from 'services/contractInstance';\r\nimport CustomRadio from 'components/UI/CustomRadio';\r\nimport Image from 'components/UI/Image';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  actionButton: {\r\n    backgroundColor: theme.custom.palette.darkRed,\r\n    minWidth: theme.spacing(1),\r\n    border: 'none'\r\n  },\r\n  dialogActions: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    marginTop: theme.spacing(3),\r\n    marginRight: -theme.spacing(2 / 8)\r\n  },\r\n  titleLine: {\r\n    color: '#fff',\r\n    marginBottom: theme.spacing(2.5)\r\n  },\r\n  label: {\r\n    color: \"#fff\"\r\n  },\r\n  labelLine: {\r\n    marginBottom: theme.spacing(1)\r\n  },\r\n  labelLine1: {\r\n    marginTop: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    float: 'right',\r\n    color: '#16ACE2'\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  imagePad: {\r\n    width:200, \r\n    height: 200, \r\n    background: 'none', \r\n    margin: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid rgb(107,118,161)'\r\n  },\r\n  image: {\r\n    width: 150, \r\n    height: 150, \r\n    background: 'none', \r\n    margin: '10px',\r\n    borderRadius: '5px',\r\n  },\r\n  dialogContent: {\r\n    [theme.breakpoints.down(360)]: {\r\n      maxHeight: '200px',\r\n      padding: theme.spacing(0.5),\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      maxHeight: '382px',\r\n      padding: theme.spacing(1, 0, 1, .5),\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(1),\r\n    maxHeight: '460px',\r\n    width: 'auto',\r\n    overflowX: 'unset',\r\n    overflowY: 'scroll',\r\n    '&::-webkit-scrollbar-track': {\r\n      borderRadius: 2,\r\n      backgroundColor: theme.palette.background.default\r\n    },\r\n    '&::-webkit-scrollbar': {\r\n      width: 5,\r\n      backgroundColor: theme.palette.background.default\r\n    },\r\n  },\r\n  container: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 0\r\n    },\r\n    display: 'flex',\r\n    padding: `2px 8px 8px 8px`,\r\n    margin: 0,\r\n    flexGrow: 1,\r\n  },\r\n  gridCls:{\r\n    padding: theme.spacing(0)\r\n  },\r\n  label: {\r\n    fontSize: '20px',\r\n    //fontFamily: 'fontMedium'\r\n  }\r\n}));\r\n\r\nconst RewardModal = ({ onClose, account, chainId, library, reward }) => {\r\n  const classes = useStyles();\r\n  const dialogClasses = dialogStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const contract = contractInstance(account, chainId, library);\r\n  \r\n  const onFormSubmit = async (ev) => {\r\n    ev.preventDefault()\r\n    onClose();\r\n  }\r\n  \r\n  const[rewardMethod, setRewardMethod] = useState(reward);\r\n  const[loadingStatus, setLoadingStatus] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setRewardMethod(event.target.value);\r\n  }\r\n\r\n  const chooseReward = async () => {\r\n    if (!!account) {\r\n      let w_rewardMethod = false;\r\n      if(rewardMethod === 'sharing')\r\n        w_rewardMethod = true;\r\n\r\n      setLoadingStatus(true)\r\n      try {\r\n        let loop = true;\r\n        let tx = null;\r\n        const {hash: rewardMethodHash} = await contract.changeRewardMethod(w_rewardMethod)\r\n        \r\n        while (loop) {\r\n            tx = await library.getTransactionReceipt(rewardMethodHash);\r\n            console.log('kevin transaction tx', tx)\r\n            if (isEmpty(tx)) {\r\n                await delay(300)\r\n            } else {\r\n                loop = false\r\n            }\r\n        }\r\n        if (tx.status === 1) {\r\n          setLoadingStatus(false)\r\n          enqueueSnackbar(`Reward Method Change Successful.`, { variant: 'success'});\r\n          onClose();\r\n          return;\r\n        } else {\r\n          setLoadingStatus(false)\r\n          enqueueSnackbar(`failed:`, { variant: 'error' });\r\n          onClose();\r\n          return;\r\n        }\r\n      } catch (error) {\r\n          enqueueSnackbar(`error: ${error?.data?.message}`, { variant: 'error' });\r\n          setLoadingStatus(false)\r\n          console.log('kevin===>', error)\r\n      }\r\n    }\r\n  }  \r\n  \r\n  return (\r\n    <DialogWrapper open={true} onClose={onClose}>\r\n      <form onSubmit={onFormSubmit} >\r\n        <div className={dialogClasses.root}>\r\n          <Typography variant='h6' className={classes.titleLine}>Set Reward Method</Typography>\r\n          <DialogContent dividers className={classes.dialogContent}>\r\n            <Grid container spacing={2} className={classes.container} justifyContent=\"space-between\">\r\n              <Grid\r\n                item\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                xs={12}\r\n                md={6}\r\n                spacing={2}>\r\n                  <Image\r\n                      src=\"assets/images/RepUSD.png\"\r\n                      className={classes.image}\r\n                      alt=\"Web3 Legal Engineering\"\r\n                  />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={6}\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <RadioGroup aria-label=\"gender\" value={rewardMethod} onChange={handleChange}>\r\n                    <FormControlLabel style={{color: \"#fff\"}} value=\"interest\" control={<CustomRadio />} label=\"Daily interest\" />\r\n                </RadioGroup>\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                  <Typography style={{color: \"#fff\"}}>\r\n                  You have successfully borrowed RepUSD based on your reputation.<br/>\r\n                  Your borrowed RepUSD has been deposited in an interest bearing vault on your behalf. \r\n                  You earn an interest of 36% APY. <br/>\r\n                  The interest will be added to your account daily. \r\n                  </Typography>\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </DialogContent>\r\n          <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end' }}>\r\n            <ContainedButton\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '2.3rem',\r\n                marginTop: '1.1rem',\r\n                borderRadius: '1rem',\r\n                borderColor: 'white',\r\n                cursor: 'pointer',\r\n                color: '#fff'\r\n              }}\r\n              onClick={() => \r\n                onClose()\r\n              }\r\n            >\r\n              Continue\r\n            </ContainedButton>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </DialogWrapper>\r\n  );\r\n}\r\n\r\nexport default RewardModal;\r\n","\r\nconst EXCHANGE_PLATFORMS = [\r\n    'Pancakeswap',\r\n    'Uniswap',\r\n    'Quickswap',\r\n    'Compound',\r\n    'Curve',\r\n    'Marker',\r\n    'Sushiswap',\r\n    'Venus',\r\n    'Yearn',\r\n    'InstaDApp',\r\n    'MDex',\r\n    'Balancer',\r\n    'AAVE',\r\n    'WBTC',\r\n    'Alpaca',\r\n    'Convex',\r\n    'Chainlink',\r\n    'Terra',\r\n    'Avalanche',\r\n    'Dai'\r\n    // 'Ellipsis'\r\n];\r\n\r\nexport {\r\n    EXCHANGE_PLATFORMS\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport PanoramaFishEyeIcon from '@material-ui/icons/PanoramaFishEye';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    color: \"#13c552\",\r\n    \"&$checked\": {\r\n        color: \"#13c552\"\r\n    }\r\n  },\r\n  checked: {},\r\n});\r\n\r\n// Inspired by blueprintjs\r\nexport default function CustomCheckbox(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Checkbox\r\n        classes={{\r\n            root: classes.root,\r\n            checked: classes.checked\r\n        }}\r\n        checkedIcon={<CheckCircleIcon />}\r\n        icon={<PanoramaFishEyeIcon />}\r\n        {...props}\r\n    />\r\n  );\r\n}","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport Image from 'components/UI/Image';\r\nimport { EXCHANGE_PLATFORMS } from 'constants/links/exchange-platforms';\r\nimport CustomCheckbox from 'components/UI/CustomCheckbox';\r\nimport { AppContext } from 'contexts';\r\nimport ContainedButton from 'components/UI/Buttons/ContainedButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    borderRadius: theme.spacing(2),\r\n    background: '#FFFFFF 0% 0% no-repeat padding-box',//'rgb(27,21,36)',\r\n    boxShadow: '0px 4px 1px #0F123F08',\r\n    border: \"1px solid #E0E0E4EB\",\r\n    opacity: \"1\",\r\n    width: '100%',\r\n    padding: theme.spacing(4,3)\r\n  },\r\n  exchangeLabel: {\r\n    color: 'rgb(89,87,213)',\r\n    fontSize: 25,\r\n    fontWeight: 700,\r\n    //fontFamily: 'LULO'\r\n  },\r\n  searchInput: {\r\n    marginTop: theme.spacing(1),\r\n    maxWidth: 300\r\n  },\r\n  platforms: {\r\n    display: 'block',\r\n    height: `calc(100vh - ${theme.custom.layout.topAppBarHeight + theme.custom.layout.footerHeight + theme.spacing(12)}px)`,\r\n    overflow: 'scroll',\r\n    marginTop: theme.spacing(1),\r\n    paddingTop: theme.spacing(1)\r\n  },\r\n  label: {\r\n    fontSize: '22px',\r\n    color: 'rgb(60,60,60)'\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 100,\r\n    marginTop: theme.spacing(0.5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 200,\r\n      height: 100\r\n    },\r\n  },\r\n  desc: {\r\n    color: '#555',\r\n    fontSize: 14,\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst DexPlatform = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { markets, setMarkets, setSearchInvest, loadingSerach } = useContext(AppContext);\r\n\r\n  const handleChange = (event) => {\r\n    var tmpArray = JSON.parse(JSON.stringify(markets));\r\n    if(event.target.checked){\r\n      tmpArray.push(event.target.name.toLowerCase());\r\n      setMarkets(tmpArray);\r\n    } else {\r\n      const index = tmpArray.indexOf(event.target.name.toLowerCase());\r\n      if(index > -1)\r\n        tmpArray.splice(index,1);\r\n      \r\n      setMarkets(tmpArray);\r\n    }\r\n  };\r\n\r\n  const searchInvest = () => {\r\n    setSearchInvest(true);\r\n  }\r\n  \r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          <Typography className={classes.exchangeLabel}> Markets </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography className={classes.desc}>Select the markets you have invested in below and click search to get the value of your reputation.</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className={classes.platforms}>\r\n            {EXCHANGE_PLATFORMS.map((index) => {\r\n                return ( \r\n                  <FormControlLabel\r\n                    classes={{label: classes.label}}\r\n                    key={index}\r\n                    style={{marginBottom: theme.spacing(1), padding: theme.spacing(1.5), display: 'flex'}}\r\n                    control={<CustomCheckbox name={index} onChange={handleChange} />}\r\n                    label={index}\r\n                  />\r\n                )\r\n            })}\r\n          </div>\r\n        </Grid> \r\n        <Grid item xs={12}>\r\n          <ContainedButton onClick={searchInvest} loading={loadingSerach} style={{\r\n                  height: '2.5rem',\r\n                  marginTop: '1rem',\r\n                  borderRadius: '5px',\r\n                  borderColor: 'red',\r\n                  cursor: 'pointer',\r\n                  background: 'rgb(89,87,213)',\r\n                  color: '#fff'\r\n                }}>\r\n            Search\r\n          </ContainedButton>\r\n        </Grid>\r\n      </Grid> \r\n    </div>\r\n  );\r\n};\r\n\r\nDexPlatform.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default DexPlatform;\r\n","/**** add token into header url */\r\nexport function makeTokenHeader(token) {\r\n    const headerConfig = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    }\r\n    return headerConfig;\r\n}","import React, {useContext, useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport ContainedButton from 'components/UI/Buttons/ContainedButton';\r\nimport { AppContext } from 'contexts';\r\nimport { serverAddress } from 'constants/serverAddress';\r\nimport { makeTokenHeader } from 'utils/headerConfig';\r\nimport Image from 'components/UI/Image';\r\nimport RewardModal from 'components/RewardModal';\r\nimport { contractInstance } from 'services/contractInstance';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  reputation: {\r\n    fontSize: 24,\r\n    fontWeight: 500,\r\n    marginRight: theme.spacing(1),\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  reputationValue: {\r\n    fontSize: 24,\r\n    fontWeight: 700,\r\n    marginRight: theme.spacing(1),\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  infoboard: {\r\n    padding: theme.spacing(1,3),\r\n    width: '100%',\r\n    background: '#FFFFFF 0% 0% no-repeat padding-box',//'rgb(27,21,36)',\r\n    boxShadow: '0px 4px 1px #0F123F08',\r\n    border: \"1px solid #E0E0E4EB\",\r\n    opacity: \"1\",\r\n    borderRadius: '6px',\r\n    marginBottom: theme.spacing(4),\r\n    boxShadow: '0px 0px 5px 0 rgba(243,243,243,.8)',\r\n    backgroundColor: 'rgb(255,255,255)'\r\n  },\r\n  divider: {\r\n    border: '1px solid',\r\n    borderColor: 'rgb(60,60,60,0.8)',\r\n    width: '100%',\r\n    margin: theme.spacing(1,0)\r\n  },\r\n  searchPan: {\r\n    padding: theme.spacing(1,2),\r\n    display: 'block',\r\n    width: '100%',\r\n    height: `calc(100vh - ${theme.custom.layout.topAppBarHeight + theme.custom.layout.footerHeight}px)`,\r\n    overflow: 'scroll'\r\n  },\r\n  market: {\r\n    fontSize: 20,\r\n    fontWeight: 600,\r\n    color: theme.palette.warning.dark,\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  property: {\r\n    fontSize: 16,\r\n    fontWeight: 600,\r\n    color: 'rgb(100,100,100)'\r\n  },\r\n  valinfo: {\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n    color: 'rgb(60,60,60)'\r\n  },\r\n  image: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      maxWidth: 200,\r\n      marginBottom: 60\r\n    },\r\n    maxWidth: 400\r\n  },\r\n}));\r\n\r\nconst RepCalc = props => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { markets, account, chainId, library, token, setLoadingSearch, isSearchInvest, setSearchInvest } = useContext(AppContext);\r\n\r\n  const contract = contractInstance(account, chainId, library);\r\n  const [ investInfo, setInvestInfo ] = useState([]);\r\n  const [state, setState] = useState({reputation: 0, borrowAmount: 0 });\r\n  const [loadingLendStatus, setLoadingLendStatus] = useState(false);\r\n  const [firstLoadStatus, setFirstLoadStatus] = useState(true);\r\n  const [isRewardDialog, setIsRewardDialog] = useState(false);\r\n  const[rewardMethod, setRewardMethod] = useState('interest');\r\n\r\n  useEffect(() => {\r\n    async function getInvest(param) {\r\n      const url = serverAddress + 'search';\r\n      const response = await axios.post(url,{address: account.toLowerCase(), invested_platforms:param}, makeTokenHeader(token));\r\n      if(response.data.success){\r\n        setFirstLoadStatus(false);\r\n        setInvestInfo(response.data.result.reputation);\r\n        setState({reputation: parseFloat(response.data.result.totalReputation).toFixed(2), borrowAmount: parseFloat(response.data.result.borrowAmount).toFixed(2)});\r\n      }\r\n      setLoadingSearch(false);\r\n    }\r\n    \r\n    if(!!token && isSearchInvest) {\r\n      setLoadingSearch(true);\r\n      enqueueSnackbar('Searching...', { variant: 'info' });\r\n      getInvest(markets).then(()=> {\r\n        enqueueSnackbar('Searching Completed', { variant: 'info' }); \r\n      });\r\n    } else if( isSearchInvest ){\r\n      setLoadingSearch(false);\r\n      enqueueSnackbar(`Please wait until login success for a moment.`, { variant: 'error' });\r\n    }  \r\n    setSearchInvest(false)\r\n  },[isSearchInvest]);\r\n\r\n  useEffect(() => {\r\n    async function getReputation() {\r\n      const url = serverAddress + 'getreputation';\r\n      const response = await axios.post(url,{address: account.toLowerCase()}, makeTokenHeader(token));\r\n      if(response.data.success){\r\n        setState({reputation: parseFloat(response.data.result).toFixed(2), borrowAmount: state.borrowAmount})\r\n        setLoadingSearch(false);\r\n      } \r\n    }\r\n    \r\n    if(!!token && !!account) {\r\n      getReputation();\r\n    }\r\n  },[account, token])\r\n\r\n  const handleLend = () => {\r\n    async function getRewardMethodInfo(userAccount) {\r\n      try {\r\n        const w_userInfo = await contract.userInfo(userAccount.toLowerCase())\r\n        if(w_userInfo.rewardMethod)\r\n        {\r\n          setRewardMethod('sharing')\r\n        } else {\r\n          setRewardMethod('interest')\r\n        }\r\n      }\r\n      catch(error) {\r\n        enqueueSnackbar(`An unknown error occurred.`, { variant: 'error' });\r\n      }\r\n    }\r\n    async function lend(param) {\r\n      const url = serverAddress + 'invest';\r\n      const response = await axios.post(url,{address: account.toLowerCase(), invested_platforms:param}, makeTokenHeader(token));\r\n      if(response.data.success){\r\n        await getRewardMethodInfo(account.toLowerCase());\r\n        enqueueSnackbar(`Lending success.`, { variant: 'success' });\r\n        setLoadingLendStatus(false);\r\n        setIsRewardDialog(true);\r\n      } else {\r\n        enqueueSnackbar(`You borrowed RepUSD already.`, { variant: 'error' });\r\n        setLoadingLendStatus(false);\r\n      }\r\n    }\r\n    setLoadingLendStatus(true);\r\n    if(!!token) {\r\n      lend(markets);\r\n    } else {\r\n      setLoadingLendStatus(false);\r\n      enqueueSnackbar(`Please wait until login success for a moment.`, { variant: 'error' });\r\n    }  \r\n  }\r\n\r\n  const closeHandler = () => {\r\n    setIsRewardDialog(false);\r\n    window.location.href=\"/vault\";\r\n  }\r\n  return (\r\n    <Grid container spacing={4} justifyContent=\"space-between\">\r\n      <Grid container item xs={12} md={5}>\r\n        <Typography style={{color: \"rgb(120,120,120)\"}} className={classes.reputation}>My Reputation</Typography>\r\n        <Typography className={classes.reputationValue}>$ </Typography>\r\n        <Typography className={classes.reputationValue}>{state.reputation}</Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} md={4}>\r\n        <Typography style={{color: \"rgb(120,120,120)\"}} className={classes.reputation}>Borrowable</Typography>\r\n        <Typography className={classes.reputationValue}>$ </Typography>\r\n        <Typography className={classes.reputationValue}>{state.borrowAmount}</Typography>\r\n      </Grid>\r\n      <Grid item container xs={12} md={3} justifyContent=\"flex-end\">\r\n        <ContainedButton loading={loadingLendStatus} onClick={handleLend} variant=\"outlined\" color=\"primary\" size=\"large\">\r\n        Borrow RepUSD\r\n        </ContainedButton>\r\n      </Grid>\r\n      <div className={classes.searchPan}>\r\n        {firstLoadStatus?\r\n          <Grid item container xs={12}>\r\n            <div style={{margin: \"auto\"}}>\r\n            <Image\r\n              src=\"assets/images/RepUSD white1.png\"\r\n              alt=\"Web3 Legal Engineering\"\r\n              className={classes.image}\r\n              data-aos=\"fade-up\"\r\n              data-aos-easing=\"ease-out-cubic\"\r\n              data-aos-duration=\"2000\" \r\n            />\r\n            </div>\r\n          </Grid>\r\n          :\r\n          <></>\r\n        }\r\n        <Grid item container xs={12}>\r\n          {investInfo.map((eachInfo, index) => {\r\n            return(\r\n              <div className={classes.infoboard} key={index}>\r\n                <Grid item xs={12} key={index+'grid'}>\r\n                  <Typography className={classes.market} key={index+'market'}>{eachInfo.dapp}</Typography>\r\n                </Grid>\r\n                {eachInfo.reputation.map((rep,index_rep) => {\r\n                  let len = eachInfo.reputation.length - 1;\r\n                  let bDisplay = ( len !== index_rep);\r\n                  return(\r\n                    <Grid container key={index+'row'+index_rep}>\r\n                      <Grid item xs={12} md={3} key={index+'row'+index_rep+'col1'}>\r\n                        <Typography className={classes.property} key={index+'row'+index_rep+'pool'}>Pool</Typography>\r\n                        <Typography className={classes.valinfo} key={index+'row'+index_rep+'poolval'}>{rep.poolName}</Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={3} key={index+'row'+index_rep+'col2'}>\r\n                        <Typography className={classes.property} key={index+'row'+index_rep+'token'}>Token</Typography>\r\n                        <Typography className={classes.valinfo} key={index+'row'+index_rep+'symbol'}>{rep.symbol}</Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={3} key={index+'row'+index_rep+'col3'}>\r\n                        <Typography className={classes.property} key={index+'row'+index_rep+'amount'}>Amount</Typography>\r\n                        <Typography className={classes.valinfo} key={index+'row'+index_rep+'amountval'}>{parseFloat(rep.amount).toFixed(7)}</Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={3} key={index+'row'+index_rep+'col4'}>\r\n                        <Typography className={classes.property} key={index+'row'+index_rep+'usd'}>Value USD</Typography>\r\n                        <Typography className={classes.valinfo} key={index+'row'+index_rep+'usdval'}>{parseFloat(rep.repUSD).toFixed(2)}</Typography>\r\n                      </Grid>\r\n                      {bDisplay?\r\n                        <div className={classes.divider} key={index+'row'+index_rep+'divid'}></div>\r\n                        :\r\n                        <></>\r\n                      } \r\n                    </Grid>\r\n                  )\r\n                })}\r\n              </div>\r\n            )\r\n          })}\r\n        </Grid>\r\n      </div>\r\n      {isRewardDialog &&\r\n        <RewardModal\r\n          onClose={closeHandler}\r\n          account={account}\r\n          chainId={chainId}\r\n          library={library}\r\n          reward={rewardMethod}\r\n        />\r\n      }\r\n    </Grid>\r\n  );\r\n};\r\n\r\nRepCalc.propTypes = {\r\n  /**\r\n   * External classes\r\n   */\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default RepCalc;\r\n","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\r\n\r\nimport Section from 'hoc/Section';\r\nimport DexPlatform from './DexPlatform';\r\nimport RepCalc from './RepCalc';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgb(237, 240, 244)'\r\n  },\r\n  section: {\r\n    padding: theme.spacing(3, 1),\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: theme.spacing(4, 5),\r\n    },\r\n  }\r\n}));\r\n\r\nconst Lend = () => {\r\n  const classes = useStyles();\r\n\r\n  AOS.init({\r\n    once: true,\r\n    delay: 50,\r\n    duration: 500,\r\n    easing: 'ease-in-out',\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Section className={classes.section}>\r\n        <div className={classes.root}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n            spacing={4}\r\n          >\r\n            <Grid\r\n              container\r\n              item\r\n              xs={12}\r\n              md={3}\r\n            >\r\n              <DexPlatform />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={9}\r\n            >\r\n              <RepCalc />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Section>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Lend;\r\n"],"sourceRoot":""}